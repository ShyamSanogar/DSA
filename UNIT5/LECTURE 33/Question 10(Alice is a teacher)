#include <stdio.h>
#include <stdlib.h>

void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void heapify(int arr[], int size, int root) {
    int largest = root;
    int left = 2 * root + 1;
    int right = 2 * root + 2;

    if (left < size && arr[left] > arr[largest]) {
        largest = left;
    }

    if (right < size && arr[right] > arr[largest]) {
        largest = right;
    }

    if (largest != root) {
        swap(&arr[root], &arr[largest]);
        heapify(arr, size, largest);
    }
}

void heapSort(int arr[], int size) {
    for (int i = size / 2 - 1; i >= 0; i--) {
        heapify(arr, size, i);
    }

    for (int i = size - 1; i >= 1; i--) {
        swap(&arr[0], &arr[i]);
        heapify(arr, i, 0);
    }
}

int countGreaterThan(int arr[], int size, int number) {
    int count = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] > number) {
            count++;
        }
    }
    return count;
}

int main() {
    int size;
    scanf("%d", &size);
    int* arr = (int*)malloc(size * sizeof(int));
    
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    heapSort(arr, size);

    int number;
    scanf("%d", &number);
    
    int greaterCount = countGreaterThan(arr, size, number);

    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    printf("%d", greaterCount);

    free(arr);
    return 0;
}
